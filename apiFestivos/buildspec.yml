version: 0.2

env:
  variables:
    IMAGE_TAG: latest
    ECR_REPOSITORY: "058264525154.dkr.ecr.us-east-2.amazonaws.com/apicontainer"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Verificando Java y Maven..."
      - java -version
      - cd apiFestivos
      - mvn -version
      # --- INICIO FRONTEND ---
      - echo "Instalando Node.js para frontend..."
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash && export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" && nvm install 20 && nvm use 20
      - echo "Instalando dependencias de Node.js..."
      - cd ../../frontendFestivos
      - npm install
  pre_build:
    commands:
      - echo "Iniciando sesión en Amazon ECR..."
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_REPOSITORY
  build:
    commands:
      - echo "Compilando frontend Angular..."
      - cd frontendFestivos
      - npm run build
      - echo "Frontend compilado correctamente"
      - echo "Copiando frontend al backend..."
      - cp -r dist/* ../apiFestivos/presentacion/src/main/resources/static/
      - echo "Frontend copiado al backend correctamente"
      # --- FIN FRONTEND ---
      - cd ../apiFestivos
      - echo "Compilando todos los módulos Maven....."
      - mvn clean install -DskipTests
      - echo "Construyendo imagen Docker..."
      - docker build -t api-festivos .
      - docker tag api-festivos:latest $ECR_REPOSITORY:$IMAGE_TAG
  post_build:
    commands:
     - echo "Subiendo imagen a ECR..."
      - docker push $ECR_REPOSITORY:$IMAGE_TAG
      - echo "Build completado correctamente"

artifacts:
  files:
    - '**/target/*.jar'
privileged: true

